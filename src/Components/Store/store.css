
  
  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
      sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  .toggle {
      position: ralative;
      height: 100%;
      background: blue;
      width: 100%;
      transition: all .5s ease-in-out;
    }
    
    .toggle-content {
      width: 100%;
      height: 100%;
      /*min-height: 100vh;*/
      color: white;
      background-color: blue;
      
    }
    
    @media screen and (max-width: 768px) {
      .toggle {
        position: fixed;
        width: 50px;
        height: 50px;
        border-radius: 100%;
      }
    
      .menu-btn {
        margin-left: 10px;
        margin-top: 5px;
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 30px;
        height: 40px;
        cursor: pointer;
        transition: all .5s ease-in-out;
        z-index: 2;
      }
      .menu-btn__burger {
        width: 30px;
        height: 3px;
        background: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(255,101,47,.2);
        transition: all .5s ease-in-out;
      }
      .menu-btn__burger::before,
      .menu-btn__burger::after {
        content: '';
        position: absolute;
        width: 30px;
        height: 3px;
        background: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(255,101,47,.2);
        transition: all .5s ease-in-out;
      }
      .menu-btn__burger::before {
        transform: translateY(-8px);
      }
      .menu-btn__burger::after {
        transform: translateY(8px);
      }
      /* ANIMATION */
      .menu-btn.open .menu-btn__burger {
        transform: translateX(-50px);
        background: transparent;
        box-shadow: none;
      }
      .menu-btn.open .menu-btn__burger::before {
        transform: rotate(45deg) translate(35px, -35px);
      }
      .menu-btn.open .menu-btn__burger::after {
        transform: rotate(-45deg) translate(35px, 35px);
      }
    
      .toggle-content {
        position: fixed;
        background: blue;
        height: 100vh;
        width: 100%;
        flex-direction: column;
        clip-path: circle(100px at 90% -100%);
        -webkit-clip-path: circle(100px at 90% -100%);
        transition: all 1s ease-out;
        pointer-events: none;
      }
  
      .toggle-content.open {
        clip-path: circle(1000px at 90% );
        -webkit-clip-path: circle(1000px at 90%);
        pointer-events: all;
      }
  
      .content-item {
        opacity: 0;
        transition: all 0.5s ease 0.2s;
      }
  
      .content-item.fade {
        opacity: 1;
      }
    }

    /* The container */
    .container {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 0px;
        cursor: pointer;
        font-size: 18px;
        color: black;
        font-weight: bold;
        font-family: Arial, Helvetica, sans-serif;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
  
  /* Hide the browser's default checkbox */
  .container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: white;
    border-style: solid;
    border-width: 3px;
    border-color: #CBE7FF;
    border-radius: 4px;
  }
  
  /* On mouse-over, add a grey background color */
  .container:hover input ~ .checkmark {
    background-color: #ccc;
  }
  
  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color: #CBE7FF;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 7px;
    top: 0px;
    width: 6px;
    height: 15px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }